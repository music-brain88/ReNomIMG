image: node:10.15

stages:
  - pages
  - document
  - container

before_script:
  - echo "deb http://deb.debian.org/debian jessie main" > /etc/apt/sources.list
  - echo "deb http://security.debian.org jessie/updates main" >> /etc/apt/sources.list
  - echo "deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu trusty main" >> /etc/apt/sources.list
  - echo "deb-src http://ppa.launchpad.net/deadsnakes/ppa/ubuntu trusty main" >> /etc/apt/sources.list
  - apt-get update
  - apt-get -y upgrade
  - apt-get install -y --allow-unauthenticated python3.5-dev

pages:
  stage: pages
  script:
    - wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tar.xz
    - tar Jxfv Python-3.6.0.tar.xz
    - cd Python-3.6.0
    - ./configure; make; make install
    - cd ../
    - wget https://bootstrap.pypa.io/get-pip.py
    - /usr/local/bin/python3.6 get-pip.py
    - pip install virtualenv
    - pip install virtualenvwrapper
    - virtualenv --no-site-packages -p /usr/local/bin/python3.6 py36
    - virtualenv --no-site-packages -p /usr/bin/python3.5 py35
    - source py35/bin/activate
    - pip install wheel Cython numpy
    - pip install -r requirements.txt
    - source py36/bin/activate
    - pip install wheel Cython numpy
    - pip install -r requirements.txt

    - source py35/bin/activate
    - python setup.py bdist_wheel sdist
    - source py36/bin/activate
    - python setup.py bdist_wheel sdist
    - mkdir -p public/bin
    - cp dist/* public/bin
    - ls public/bin

  artifacts:
    paths:
    - public

  only:
    - /^release\/.*$/


sphinx:
  stage: document
  when: manual
  script:
    - apt-get update -qq && apt-get install -y -qq pandoc openssh-client
    - pip install -r doc/requirements.txt
    - pip install ipython
    - pip install numpy flake8 pytest pytest-flake8
    - pip install -r requirements.txt
    - pip install -e .
    - eval $(ssh-agent -s)
    - echo "$RENOM_JP_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo "$HOST_KEYS" > ~/.ssh/known_hosts'

    - cd doc
    - sh build.sh -l all
    - echo "$RENOM_JP_SSH_PRIVATE_KEY" > tmp
    - chmod 600 tmp
    - scp -r -P "$RENOM_JP_PORT" -i tmp _build/html/* renom123@"$RENOM_JP_HOST":"$TEST_DEPLOY_DIR"/renomimg
    - ssh -p "$RENOM_JP_PORT" renom123@"$RENOM_JP_HOST" rm -rf "$DEPLOY_DIR"/renomimg
    - ssh -p "$RENOM_JP_PORT" renom123@"$RENOM_JP_HOST" cp -r "$TEST_DEPLOY_DIR"/renomimg "$DEPLOY_DIR"/renomimg


container_image:
  stage: container
  when: manual
  image: docker:latest
  services:
   - docker:dind
  variables:
    CONTAINER_TAG: "0.0"
  script:
    - cd ..
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/grid-devs/renomimg/$CI_COMMIT_REF_NAME:$CONTAINER_TAG -f ReNomIMG/test/docker/Dockerfile .
    - docker push registry.gitlab.com/grid-devs/renomimg/$CI_COMMIT_REF_NAME:$CONTAINER_TAG
